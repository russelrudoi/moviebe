{"version":3,"file":"static/js/542.39286e7d.chunk.js","mappings":"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","sources":["components/promo/Promo.js","components/inTheatersList/inTheatersListItem/InTheatersListItem.js","components/inTheatersList/InTheatersList.js","components/templateListSwiper/TemplateListSwiper.js","components/comingSoon/ComingSoon.js","components/movies/Movies.js","components/series/Series.js","components/pages/MainPage.js","components/spinner/Spinner.js","components/templateListItem/TemplateListItem.js","utils/changeUrlImage.js"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport changeUrlImage from '../../utils/changeUrlImage';\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorIcon from '../../resources/img/icon/error.png';\r\n\r\nimport './promo.scss'\r\n\r\nconst Promo = () => {\r\n    const { inTheaters: promo, inTheatersLoadingStatus: promoLoadingStatus } = useSelector(state => state.inTheaters);\r\n\r\n    if (promoLoadingStatus === 'loading') {\r\n        return (\r\n            <div className=\"promo\">\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n                <div className=\"promo__bg\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (promoLoadingStatus === 'error') {\r\n        return (\r\n            <div className=\"promo\">\r\n                <div className=\"error\">\r\n                    <img src={ErrorIcon} alt=\"\" />\r\n                    Error\r\n                </div>\r\n                <div className=\"promo__bg\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderPromo = (arr) => {\r\n        const random = (min, max) => {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        }\r\n\r\n        if (arr.length) {\r\n            const { title, fullTitle, plot, imDbRating, metacriticRating, image } = arr[random(3, arr.length)]\r\n\r\n            return (\r\n                <div className=\"container inner_wrapper\">\r\n                    <div className=\"promo__info\">\r\n                        <h1 className=\"promo__title\">{title}</h1>\r\n                        <div className=\"promo__original-title\">{fullTitle}</div>\r\n                        <p className=\"promo__description\">\r\n                            {plot}\r\n                        </p>\r\n                        <div className=\"promo__ratings\">\r\n                            <div className=\"promo__ratings-name\">\r\n                                IMDB:<span>{imDbRating}</span>\r\n                            </div>\r\n                            <div className=\"promo__ratings-name\">\r\n                                MC:<span>{metacriticRating}</span>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn promo__btn\">more details</button>\r\n                    </div>\r\n                    <div className=\"promo__img\">\r\n                        <img src={changeUrlImage(image)} alt=\"movies\" />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const element = renderPromo(promo)\r\n\r\n    return (\r\n        <div className=\"promo\">\r\n            {element}\r\n            <div className=\"promo__bg\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Promo","import classNames from \"classnames\";\r\nimport changeUrlImage from \"../../../utils/changeUrlImage\";\r\n\r\nimport './inTheatersListItem.scss'\r\n\r\nconst InTheatersListItem = ({ title, year, plot, image, imDbRating, metacriticRating, index }) => {\r\n    const itemSizeClass = classNames(\r\n        'in-theaters__item',\r\n        { 'in-theaters__big': index === 0 },\r\n        { 'in-theaters__small': index === 1 },\r\n        { 'in-theaters__small second': index === 2 }\r\n    )\r\n\r\n    const changedImage = changeUrlImage(image)\r\n\r\n    return (\r\n        <div className={itemSizeClass}>\r\n            <img src={changedImage} alt=\"\" />\r\n            <div className=\"in-theaters__info\">\r\n                <h2 className=\"in-theaters__title\">{title}</h2>\r\n                <div className=\"in-theaters__year\">{year}</div>\r\n                <p className=\"in-theaters__plot\">{plot}</p>\r\n                <div className=\"in-theaters__ratings\">\r\n                    <div className=\"in-theaters__ratings-name\">\r\n                        IMDB:<span>{imDbRating}</span>\r\n                    </div>\r\n                    <div className=\"in-theaters__ratings-name\">\r\n                        MC:<span>{metacriticRating}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"btn in-theaters__btn-watch\">\r\n                watch\r\n            </button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default InTheatersListItem","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport InTheatersListItem from './inTheatersListItem/InTheatersListItem';\r\nimport { fetchInTheaters } from './inTheatersSlice';\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\n\r\nimport '../../style/style.scss';\r\nimport './inTheatersList.scss';\r\n\r\nconst InTheatersList = () => {\r\n    const { inTheaters, inTheatersLoadingStatus } = useSelector(state => state.inTheaters)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchInTheaters());\r\n    }, [])\r\n\r\n    if (inTheatersLoadingStatus === 'loading') {\r\n        <div className=\"in-theaters\">\r\n            <div className=\"container\">\r\n                <h2 className=\"title\">In theaters</h2>\r\n                <div className=\"spinner\">\r\n                    <Spinner/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    const renderList = (arr) => {\r\n        return arr.map(({ id, ...props }, index) => {\r\n            if (index < 3) {\r\n                return (\r\n                    <InTheatersListItem\r\n                        key={id}\r\n                        index={index}\r\n                        {...props}\r\n                    />\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = renderList(inTheaters)\r\n\r\n    return (\r\n        <div className=\"in-theaters\">\r\n            <div className=\"container\">\r\n                <h2 className=\"title\">In theaters</h2>\r\n                <div className=\"in-theaters__wrapper\">\r\n                    {elements}\r\n                    <button className=\"btn in-theaters__btn-link\">see more</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InTheatersList;","import TemplateListItem from '../templateListItem/TemplateListItem';\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Keyboard, Navigation, Mousewheel } from \"swiper\";\r\n\r\nimport \"swiper/css\";\r\nimport './templateListSwiper.scss';\r\n\r\nconst TemplateListSwiper = ({data, title}) => {\r\n\r\n    const renderTemplateList = (arr) => {\r\n        if (arr.length === 0) {\r\n            return <div>Error loading</div>\r\n        }\r\n        \r\n        return arr.map(({ id, ...props }, index) => {\r\n            if (index <= 30) {\r\n                return (\r\n                    <SwiperSlide className=\"template__item\" key={id}>\r\n                        <TemplateListItem {...props} />\r\n                    </SwiperSlide>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    const elements = renderTemplateList(data)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"template\">\r\n                <div className=\"container\">\r\n                    <h2 className=\"title\">\r\n                        {title}\r\n                    </h2>\r\n                    <Swiper\r\n                        modules={[Navigation, Mousewheel, Keyboard]}\r\n                        pagination={{\r\n                            clickable: true,\r\n                        }}\r\n                        slidesPerView={6}\r\n                        spaceBetween={15}\r\n                        navigation={true}\r\n                        mousewheel={true}\r\n                        keyboard={true}\r\n                        className=\"mySwiper\">\r\n                        {elements}\r\n                    </Swiper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemplateListSwiper","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TemplateListSwiper from \"../templateListSwiper/TemplateListSwiper\"\r\nimport { fetchComingSoon } from \"./comingSoonSlice\";\r\n\r\n\r\nconst ComingSoon = () => {\r\n    const {comingSoon} = useSelector(state => state.comingSoon);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchComingSoon())\r\n    }, [])\r\n\r\n\r\n    return <TemplateListSwiper data={comingSoon} title={'Coming Soon'}/>\r\n}\r\n\r\nexport default ComingSoon","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TemplateListSwiper from '../templateListSwiper/TemplateListSwiper';\r\n\r\nimport { fetchMovies } from './moviesSlice';\r\n\r\nconst Movies = () => {\r\n    const { movies } = useSelector(state => state.movies)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchMovies());\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <TemplateListSwiper data={movies} title={'Movies'}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movies;","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TemplateListSwiper from \"../templateListSwiper/TemplateListSwiper\"\r\nimport { fetchSeries } from \"./seriesSlice\";\r\n\r\nconst Series = () => {\r\n    const { series } = useSelector(state => state.series);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchSeries())\r\n    }, [])\r\n\r\n    return (\r\n        <TemplateListSwiper data={series} title={'Series'}/>\r\n    )\r\n}\r\n\r\nexport default Series;","import Promo from '../promo/Promo';\r\nimport InTheatersList from '../inTheatersList/InTheatersList';\r\nimport ComingSoon from '../comingSoon/ComingSoon';\r\nimport Movies from '../movies/Movies';\r\nimport Series from '../series/Series';\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <>\r\n            <Promo />\r\n            <InTheatersList />\r\n            <ComingSoon />\r\n            <Movies />\r\n            <Series />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage","\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <svg xlinkSvg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" width=\"64px\" height=\"64px\" viewBox=\"0 0 128 128\" xmlSpace=\"preserve\"><g><path d=\"M64 9.75A54.25 54.25 0 0 0 9.75 64H0a64 64 0 0 1 128 0h-9.75A54.25 54.25 0 0 0 64 9.75z\" fill=\"#e21221\"/><animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"1600ms\" repeatCount=\"indefinite\"></animateTransform></g></svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import { useState } from 'react'\r\nimport changeUrlImage from '../../utils/changeUrlImage'\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nimport './templateListItem.scss'\r\nimport classNames from 'classnames';\r\n\r\nconst TemplateListItem = ({ title, year, image }) => {\r\n    const [imageLoaded, setImageLoaded] = useState(false)\r\n    const changedImage = changeUrlImage(image)\r\n\r\n    const handleImageLoaded = () => {\r\n        setImageLoaded(true)\r\n    };\r\n\r\n    const imageClass = classNames({\r\n        'template__image_loading': !imageLoaded\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className='template__image'>\r\n                <img className={`${imageClass}`} src={changedImage} alt=\"movies\" onLoad={handleImageLoaded} />\r\n                {\r\n                    !imageLoaded\r\n                        ? <Spinner />\r\n                        : null\r\n                }\r\n            </div>\r\n            <h2 className=\"template__title\">{title}</h2>\r\n            <div className=\"template__year\">({year})</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TemplateListItem;","const changeUrlImage = (url) => {\r\n    const endIndex = url.indexOf('._');\r\n    const changedUrl = `${url.slice(0, endIndex)}._V1_Ratio0.6716_AL_.jpg`;\r\n    \r\n    return changedUrl\r\n}\r\n\r\nexport default changeUrlImage"],"names":["useSelector","state","inTheaters","promo","promoLoadingStatus","inTheatersLoadingStatus","className","Spinner","src","alt","element","arr","min","max","length","Math","floor","random","title","fullTitle","plot","imDbRating","metacriticRating","image","changeUrlImage","renderPromo","year","index","itemSizeClass","classNames","changedImage","dispatch","useDispatch","useEffect","fetchInTheaters","elements","map","id","props","data","TemplateListItem","modules","Navigation","Mousewheel","Keyboard","pagination","clickable","slidesPerView","spaceBetween","navigation","mousewheel","keyboard","comingSoon","fetchComingSoon","movies","fetchMovies","series","fetchSeries","xlinkSvg","xmlns","xmlnsXlink","version","width","height","viewBox","xmlSpace","d","fill","attributeName","type","from","to","dur","repeatCount","useState","imageLoaded","setImageLoaded","imageClass","onLoad","url","endIndex","indexOf","slice"],"sourceRoot":""}